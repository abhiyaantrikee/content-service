version: '2'
services:
 
  #MONGO DB
  mongodb:
    user: root
    image: mongo:latest
    container_name: mongo_db
    restart: always
    command: ["mongod", "--smallfiles"]
    hostname: mongo
    ports:
      - "27017:27017"
    volumes:
      - ./data/db:/data/db:rw
    networks:
          gateway:
              aliases:
                  - mongo
  
  microgateway:
    user: root
    build: ./microgateway/.
    ports:
      - "9000:9000"
    environment:
      - CONFIG_DIR=/home/microgateway-service/definitions
      - PORT=9000
      - NODE_ENV=production
      - DEBUG=server.js
      - TLS_SERVER_CONFIG=/home/microgateway-service/config/tlsconfig.json
    container_name: gateway-service
    volumes:
       - "./data:/home/gateway-service/data"
    depends_on:
      - mongodb
    command: ["npm", "start"]

 #CONTENT SERVICE
  content:
    user: root
    build: ./content/.
    ports:
      - "9001"
    environment:
      - NODE_ENV=local
      - DEBUG=content.js
    container_name: content-service
    volumes:
       - "./data:/home/content-service/data"
    depends_on:
      - mongodb
    command: ["npm", "start"]
 
 #DOCUMENT SERVICE  
  #document:
  #  user: root
  #  build: ./document/.
  #  ports:
  #    - "9002:9002"
  #  environment:
  #    - NODE_ENV=dev
  #    - DEBUG=document.js
  #  container_name: document-service
  #  volumes:
  #     - "./data:/home/document-service/data"
    #depends_on:
    #  - rabbitmq
  #  command: ["npm", "start"]

#USER SERVICE
  user:
    user: root
    build: ./user/.
    ports:
      - "9003:9003"
    environment:
      - NODE_ENV=local
      - DEBUG=server.js
    container_name: user-service
    volumes:
       - "./data:/home/user-service/data"
    depends_on:
      - mongodb
    command: ["npm", "start"]

#NETWORKS  
networks:
  gateway:
  